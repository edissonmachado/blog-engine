@using Microsoft.AspNetCore.Identity
@model BlogEngine.Models.Comment

@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

@{
    var user = await UserManager.GetUserAsync(User);
}

<div style="display:none;">
    <h4>Comment</h4>
    <hr />
    <div class="row">
        <div class="col-md-4">
            <form asp-controller="Comments" asp-action="Create">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                @if (SignInManager.IsSignedIn(User))
                {

                    <div class="form-group">
                        <label asp-for="AuthorName" class="control-label"></label>
                        <input asp-for="AuthorName" value="@user.UserName" class="form-control" readonly="readonly" />
                        <span asp-validation-for="AuthorName" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="AuthorEmail" class="control-label"></label>
                        <input asp-for="AuthorEmail" value="@user.Email" class="form-control"  readonly="readonly" />
                        <span asp-validation-for="AuthorEmail" class="text-danger"></span>
                    </div>
                }
                else
                {
                    <div class="form-group">
                        <label asp-for="AuthorName" class="control-label"></label>
                        <input asp-for="AuthorName" class="form-control" />
                        <span asp-validation-for="AuthorName" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="AuthorEmail" class="control-label"></label>
                        <input asp-for="AuthorEmail" class="form-control" />
                        <span asp-validation-for="AuthorEmail" class="text-danger"></span>
                    </div>
                }


                <div class="form-group">
                    <label asp-for="Content" class="control-label"></label>
                    <input asp-for="Content" class="form-control" />
                    <span asp-validation-for="Content" class="text-danger"></span>
                </div>

                <input asp-for="ParentPostId" type="hidden" value="@Model.ParentPostId">

                <div class="form-group">
                    <input type="submit" value="Create" class="btn btn-primary" />
                </div>
            </form>
        </div>
    </div>

    <div>
        <a asp-action="Index">Back to List</a>
    </div>

</div>
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
